{"version":3,"file":"vendors-node_modules_react-native-gesture-handler_index_js.chunk.bundle","mappings":"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","sources":["webpack:///./node_modules/react-native-gesture-handler/Directions.js","webpack:///./node_modules/react-native-gesture-handler/DrawerLayout.js","webpack:///./node_modules/react-native-gesture-handler/GestureButtons.js","webpack:///./node_modules/react-native-gesture-handler/GestureComponents.js","webpack:///./node_modules/react-native-gesture-handler/GestureHandler.js","webpack:///./node_modules/react-native-gesture-handler/GestureHandlerButton.js","webpack:///./node_modules/react-native-gesture-handler/GestureHandlerPropTypes.js","webpack:///./node_modules/react-native-gesture-handler/GestureHandlerRootView.js","webpack:///./node_modules/react-native-gesture-handler/Gestures.js","webpack:///./node_modules/react-native-gesture-handler/NativeViewGestureHandler.js","webpack:///./node_modules/react-native-gesture-handler/PlatformConstants.js","webpack:///./node_modules/react-native-gesture-handler/RNGestureHandlerModule.js","webpack:///./node_modules/react-native-gesture-handler/State.js","webpack:///./node_modules/react-native-gesture-handler/Swipeable.js","webpack:///./node_modules/react-native-gesture-handler/createHandler.js","webpack:///./node_modules/react-native-gesture-handler/createNativeWrapper.js","webpack:///./node_modules/react-native-gesture-handler/gestureHandlerRootHOC.js","webpack:///./node_modules/react-native-gesture-handler/index.js","webpack:///./node_modules/react-native-gesture-handler/touchables/GenericTouchable.js","webpack:///./node_modules/react-native-gesture-handler/touchables/TouchableHighlight.js","webpack:///./node_modules/react-native-gesture-handler/touchables/TouchableNativeFeedback.js","webpack:///./node_modules/react-native-gesture-handler/touchables/TouchableOpacity.js","webpack:///./node_modules/react-native-gesture-handler/touchables/TouchableWithoutFeedback.js","webpack:///./node_modules/react-native-gesture-handler/touchables/index.js","webpack:///./node_modules/fbjs/lib/areEqual.js","webpack:///./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","webpack:///./node_modules/prop-types/factoryWithThrowingShims.js","webpack:///./node_modules/prop-types/index.js","webpack:///./node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import RNGestureHandlerModule from './RNGestureHandlerModule';\n\nexport default RNGestureHandlerModule.Direction;\n","// @flow\n\n// This component is based on RN's DrawerLayoutAndroid API\n//\n// It perhaps deserves to be put in a separate repo, but since it relies\n// on react-native-gesture-handler library which isn't very popular at the\n// moment I decided to keep it here for the time being. It will allow us\n// to move faster and fix issues that may arise in gesture handler library\n// that could be found when using the drawer component\n\nimport React, { Component } from 'react';\nimport invariant from 'invariant';\nimport {\n  Animated,\n  StyleSheet,\n  View,\n  Keyboard,\n  StatusBar,\n  I18nManager,\n} from 'react-native';\n\nimport { PanGestureHandler, TapGestureHandler, State } from './GestureHandler';\n\nconst DRAG_TOSS = 0.05;\n\nconst IDLE = 'Idle';\nconst DRAGGING = 'Dragging';\nconst SETTLING = 'Settling';\n\nexport type PropType = {\n  children: any,\n  drawerBackgroundColor?: string,\n  drawerPosition: 'left' | 'right',\n  drawerLockMode?: 'unlocked' | 'locked-closed' | 'locked-open',\n  drawerWidth: number,\n  keyboardDismissMode?: 'none' | 'on-drag',\n  onDrawerClose?: Function,\n  onDrawerOpen?: Function,\n  onDrawerStateChanged?: Function,\n  renderNavigationView: (progressAnimatedValue: any) => any,\n  useNativeAnimations: boolean,\n\n  // brand new properties\n  drawerType: 'front' | 'back' | 'slide',\n  edgeWidth: number,\n  minSwipeDistance: number,\n  hideStatusBar?: boolean,\n  statusBarAnimation?: 'slide' | 'none' | 'fade',\n  overlayColor: string,\n  drawerContainerStyle?: any,\n  contentContainerStyle?: any,\n  onGestureRef?: Function,\n  enableTrackpadTwoFingerGesture?: boolean,\n\n  // Properties not yet supported\n  // onDrawerSlide?: Function\n};\n\nexport type StateType = {\n  dragX: any,\n  touchX: any,\n  drawerTranslation: any,\n  containerWidth: number,\n};\n\nexport type EventType = {\n  stopPropagation: Function,\n};\n\nexport type DrawerMovementOptionType = {\n  velocity?: number,\n};\n\nexport default class DrawerLayout extends Component<PropType, StateType> {\n  static defaultProps = {\n    drawerWidth: 200,\n    drawerPosition: 'left',\n    useNativeAnimations: true,\n    drawerType: 'front',\n    edgeWidth: 20,\n    minSwipeDistance: 3,\n    overlayColor: 'rgba(0, 0, 0, 0.7)',\n    drawerLockMode: 'unlocked',\n    enableTrackpadTwoFingerGesture: false,\n  };\n\n  static positions = {\n    Left: 'left',\n    Right: 'right',\n  };\n  _openValue: ?Animated.Interpolation;\n  _onGestureEvent: ?Animated.Event;\n  _accessibilityIsModalView = React.createRef();\n  _pointerEventsView = React.createRef();\n  _panGestureHandler = React.createRef();\n  _drawerShown = false;\n\n  constructor(props: PropType, context: any) {\n    super(props, context);\n\n    const dragX = new Animated.Value(0);\n    const touchX = new Animated.Value(0);\n    const drawerTranslation = new Animated.Value(0);\n\n    this.state = {\n      dragX,\n      touchX,\n      drawerTranslation,\n      containerWidth: 0,\n    };\n\n    this._updateAnimatedEvent(props, this.state);\n  }\n\n  UNSAFE_componentWillUpdate(props: PropType, state: StateType) {\n    if (\n      this.props.drawerPosition !== props.drawerPosition ||\n      this.props.drawerWidth !== props.drawerWidth ||\n      this.props.drawerType !== props.drawerType ||\n      this.state.containerWidth !== state.containerWidth\n    ) {\n      this._updateAnimatedEvent(props, state);\n    }\n  }\n\n  _updateAnimatedEvent = (props: PropType, state: StateType) => {\n    // Event definition is based on\n    const { drawerPosition, drawerWidth, drawerType } = props;\n    const {\n      dragX: dragXValue,\n      touchX: touchXValue,\n      drawerTranslation,\n      containerWidth,\n    } = state;\n\n    let dragX = dragXValue;\n    let touchX = touchXValue;\n\n    if (drawerPosition !== 'left') {\n      // Most of the code is written in a way to handle left-side drawer.\n      // In order to handle right-side drawer the only thing we need to\n      // do is to reverse events coming from gesture handler in a way they\n      // emulate left-side drawer gestures. E.g. dragX is simply -dragX, and\n      // touchX is calulcated by subtracing real touchX from the width of the\n      // container (such that when touch happens at the right edge the value\n      // is simply 0)\n      dragX = Animated.multiply(new Animated.Value(-1), dragXValue);\n      touchX = Animated.add(\n        new Animated.Value(containerWidth),\n        Animated.multiply(new Animated.Value(-1), touchXValue)\n      );\n      touchXValue.setValue(containerWidth);\n    } else {\n      touchXValue.setValue(0);\n    }\n\n    // While closing the drawer when user starts gesture outside of its area (in greyed\n    // out part of the window), we want the drawer to follow only once finger reaches the\n    // edge of the drawer.\n    // E.g. on the diagram below drawer is illustrate by X signs and the greyed out area by\n    // dots. The touch gesture starts at '*' and moves left, touch path is indicated by\n    // an arrow pointing left\n    // 1) +---------------+ 2) +---------------+ 3) +---------------+ 4) +---------------+\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    |XXXXXXXX|......|    |XXXXXXXX|.<-*..|    |XXXXXXXX|<--*..|    |XXXXX|<-----*..|\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    +---------------+    +---------------+    +---------------+    +---------------+\n    //\n    // For the above to work properly we define animated value that will keep start position\n    // of the gesture. Then we use that value to calculate how much we need to subtract from\n    // the dragX. If the gesture started on the greyed out area we take the distance from the\n    // edge of the drawer to the start position. Otherwise we don't subtract at all and the\n    // drawer be pulled back as soon as you start the pan.\n    //\n    // This is used only when drawerType is \"front\"\n    //\n    let translationX = dragX;\n    if (drawerType === 'front') {\n      const startPositionX = Animated.add(\n        touchX,\n        Animated.multiply(new Animated.Value(-1), dragX)\n      );\n\n      const dragOffsetFromOnStartPosition = startPositionX.interpolate({\n        inputRange: [drawerWidth - 1, drawerWidth, drawerWidth + 1],\n        outputRange: [0, 0, 1],\n      });\n      translationX = Animated.add(dragX, dragOffsetFromOnStartPosition);\n    }\n\n    this._openValue = Animated.add(translationX, drawerTranslation).interpolate(\n      {\n        inputRange: [0, drawerWidth],\n        outputRange: [0, 1],\n        extrapolate: 'clamp',\n      }\n    );\n\n    this._onGestureEvent = Animated.event(\n      [{ nativeEvent: { translationX: dragXValue, x: touchXValue } }],\n      { useNativeDriver: props.useNativeAnimations }\n    );\n  };\n\n  _handleContainerLayout = ({ nativeEvent }) => {\n    this.setState({ containerWidth: nativeEvent.layout.width });\n  };\n\n  _emitStateChanged = (newState: string, drawerWillShow: boolean) => {\n    this.props.onDrawerStateChanged &&\n      this.props.onDrawerStateChanged(newState, drawerWillShow);\n  };\n\n  _openingHandlerStateChange = ({ nativeEvent }) => {\n    if (nativeEvent.oldState === State.ACTIVE) {\n      this._handleRelease(nativeEvent);\n    } else if (nativeEvent.state === State.ACTIVE) {\n      this._emitStateChanged(DRAGGING, false);\n      if (this.props.keyboardDismissMode === 'on-drag') {\n        Keyboard.dismiss();\n      }\n      if (this.props.hideStatusBar) {\n        StatusBar.setHidden(true, this.props.statusBarAnimation || 'slide');\n      }\n    }\n  };\n\n  _onTapHandlerStateChange = ({ nativeEvent }) => {\n    if (\n      this._drawerShown &&\n      nativeEvent.oldState === State.ACTIVE &&\n      this.props.drawerLockMode !== 'locked-open'\n    ) {\n      this.closeDrawer();\n    }\n  };\n\n  _handleRelease = nativeEvent => {\n    const { drawerWidth, drawerPosition, drawerType } = this.props;\n    const { containerWidth } = this.state;\n    let { translationX: dragX, velocityX, x: touchX } = nativeEvent;\n\n    if (drawerPosition !== 'left') {\n      // See description in _updateAnimatedEvent about why events are flipped\n      // for right-side drawer\n      dragX = -dragX;\n      touchX = containerWidth - touchX;\n      velocityX = -velocityX;\n    }\n\n    const gestureStartX = touchX - dragX;\n    let dragOffsetBasedOnStart = 0;\n\n    if (drawerType === 'front') {\n      dragOffsetBasedOnStart =\n        gestureStartX > drawerWidth ? gestureStartX - drawerWidth : 0;\n    }\n\n    const startOffsetX =\n      dragX + dragOffsetBasedOnStart + (this._drawerShown ? drawerWidth : 0);\n    const projOffsetX = startOffsetX + DRAG_TOSS * velocityX;\n\n    const shouldOpen = projOffsetX > drawerWidth / 2;\n\n    if (shouldOpen) {\n      this._animateDrawer(startOffsetX, drawerWidth, velocityX);\n    } else {\n      this._animateDrawer(startOffsetX, 0, velocityX);\n    }\n  };\n\n  _updateShowing = (showing: boolean) => {\n    this._drawerShown = showing;\n    this._accessibilityIsModalView.current &&\n      this._accessibilityIsModalView.current.setNativeProps({\n        accessibilityViewIsModal: showing,\n      });\n    this._pointerEventsView.current &&\n      this._pointerEventsView.current.setNativeProps({\n        pointerEvents: showing ? 'auto' : 'none',\n      });\n    const { drawerPosition, minSwipeDistance, edgeWidth } = this.props;\n    const fromLeft = drawerPosition === 'left';\n    // gestureOrientation is 1 if the expected gesture is from left to right and -1 otherwise\n    // e.g. when drawer is on the left and is closed we expect left to right gesture, thus\n    // orientation will be 1.\n    const gestureOrientation =\n      (fromLeft ? 1 : -1) * (this._drawerShown ? -1 : 1);\n    // When drawer is closed we want the hitSlop to be horizontally shorter\n    // than the container size by the value of SLOP. This will make it only\n    // activate when gesture happens not further than SLOP away from the edge\n    const hitSlop = fromLeft\n      ? { left: 0, width: showing ? undefined : edgeWidth }\n      : { right: 0, width: showing ? undefined : edgeWidth };\n    this._panGestureHandler.current &&\n      this._panGestureHandler.current.setNativeProps({\n        hitSlop,\n        activeOffsetX: gestureOrientation * minSwipeDistance,\n      });\n  };\n\n  _animateDrawer = (fromValue: ?number, toValue: number, velocity: number) => {\n    this.state.dragX.setValue(0);\n    this.state.touchX.setValue(\n      this.props.drawerPosition === 'left' ? 0 : this.state.containerWidth\n    );\n\n    if (fromValue != null) {\n      let nextFramePosition = fromValue;\n      if (this.props.useNativeAnimations) {\n        // When using native driver, we predict the next position of the animation\n        // because it takes one frame of a roundtrip to pass RELEASE event from\n        // native driver to JS before we can start animating. Without it, it is more\n        // noticable that the frame is dropped.\n        if (fromValue < toValue && velocity > 0) {\n          nextFramePosition = Math.min(fromValue + velocity / 60.0, toValue);\n        } else if (fromValue > toValue && velocity < 0) {\n          nextFramePosition = Math.max(fromValue + velocity / 60.0, toValue);\n        }\n      }\n      this.state.drawerTranslation.setValue(nextFramePosition);\n    }\n\n    const willShow = toValue !== 0;\n    this._updateShowing(willShow);\n    this._emitStateChanged(SETTLING, willShow);\n    if (this.props.hideStatusBar) {\n      StatusBar.setHidden(willShow, this.props.statusBarAnimation || 'slide');\n    }\n    Animated.spring(this.state.drawerTranslation, {\n      velocity,\n      bounciness: 0,\n      toValue,\n      useNativeDriver: this.props.useNativeAnimations,\n    }).start(({ finished }) => {\n      if (finished) {\n        this._emitStateChanged(IDLE, willShow);\n        if (willShow) {\n          this.props.onDrawerOpen && this.props.onDrawerOpen();\n        } else {\n          this.props.onDrawerClose && this.props.onDrawerClose();\n        }\n      }\n    });\n  };\n\n  openDrawer = (options: DrawerMovementOptionType = {}) => {\n    this._animateDrawer(\n      undefined,\n      this.props.drawerWidth,\n      options.velocity ? options.velocity : 0\n    );\n\n    // We need to force the update, otherwise the overlay is not rerendered and it would not be clickable\n    this.forceUpdate();\n  };\n\n  closeDrawer = (options: DrawerMovementOptionType = {}) => {\n    this._animateDrawer(undefined, 0, options.velocity ? options.velocity : 0);\n\n    // We need to force the update, otherwise the overlay is not rerendered and it would be still clickable\n    this.forceUpdate();\n  };\n\n  _renderOverlay = () => {\n    /* Overlay styles */\n    invariant(this._openValue, 'should be set');\n    const overlayOpacity = this._openValue.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, 1],\n      extrapolate: 'clamp',\n    });\n    const dynamicOverlayStyles = {\n      opacity: overlayOpacity,\n      backgroundColor: this.props.overlayColor,\n    };\n\n    return (\n      <TapGestureHandler onHandlerStateChange={this._onTapHandlerStateChange}>\n        <Animated.View\n          pointerEvents={this._drawerShown ? 'auto' : 'none'}\n          ref={this._pointerEventsView}\n          style={[styles.overlay, dynamicOverlayStyles]}\n        />\n      </TapGestureHandler>\n    );\n  };\n\n  _renderDrawer = () => {\n    const {\n      drawerBackgroundColor,\n      drawerWidth,\n      drawerPosition,\n      drawerType,\n      drawerContainerStyle,\n      contentContainerStyle,\n    } = this.props;\n\n    const fromLeft = drawerPosition === 'left';\n    const drawerSlide = drawerType !== 'back';\n    const containerSlide = drawerType !== 'front';\n\n    // we rely on row and row-reverse flex directions to position the drawer\n    // properly. Apparently for RTL these are flipped which requires us to use\n    // the opposite setting for the drawer to appear from left or right according\n    // to the drawerPosition prop\n    const reverseContentDirection = I18nManager.isRTL ? fromLeft : !fromLeft;\n\n    const dynamicDrawerStyles = {\n      backgroundColor: drawerBackgroundColor,\n      width: drawerWidth,\n    };\n    const openValue = this._openValue;\n    invariant(openValue, 'should be set');\n\n    let containerStyles;\n    if (containerSlide) {\n      const containerTranslateX = openValue.interpolate({\n        inputRange: [0, 1],\n        outputRange: fromLeft ? [0, drawerWidth] : [0, -drawerWidth],\n        extrapolate: 'clamp',\n      });\n      containerStyles = {\n        transform: [{ translateX: containerTranslateX }],\n      };\n    }\n\n    let drawerTranslateX = 0;\n    if (drawerSlide) {\n      const closedDrawerOffset = fromLeft ? -drawerWidth : drawerWidth;\n      drawerTranslateX = openValue.interpolate({\n        inputRange: [0, 1],\n        outputRange: [closedDrawerOffset, 0],\n        extrapolate: 'clamp',\n      });\n    }\n    const drawerStyles = {\n      transform: [{ translateX: drawerTranslateX }],\n      flexDirection: reverseContentDirection ? 'row-reverse' : 'row',\n    };\n\n    return (\n      <Animated.View style={styles.main} onLayout={this._handleContainerLayout}>\n        <Animated.View\n          style={[\n            drawerType === 'front'\n              ? styles.containerOnBack\n              : styles.containerInFront,\n            containerStyles,\n            contentContainerStyle,\n          ]}\n          importantForAccessibility={\n            this._drawerShown ? 'no-hide-descendants' : 'yes'\n          }>\n          {typeof this.props.children === 'function'\n            ? this.props.children(this._openValue)\n            : this.props.children}\n          {this._renderOverlay()}\n        </Animated.View>\n        <Animated.View\n          pointerEvents=\"box-none\"\n          ref={this._accessibilityIsModalView}\n          accessibilityViewIsModal={this._drawerShown}\n          style={[styles.drawerContainer, drawerStyles, drawerContainerStyle]}>\n          <View style={dynamicDrawerStyles}>\n            {this.props.renderNavigationView(this._openValue)}\n          </View>\n        </Animated.View>\n      </Animated.View>\n    );\n  };\n\n  _setPanGestureRef = ref => {\n    this._panGestureHandler.current = ref;\n    this.props.onGestureRef && this.props.onGestureRef(ref);\n  };\n\n  render() {\n    const {\n      drawerPosition,\n      drawerLockMode,\n      edgeWidth,\n      minSwipeDistance,\n    } = this.props;\n\n    const fromLeft = drawerPosition === 'left';\n\n    // gestureOrientation is 1 if the expected gesture is from left to right and -1 otherwise\n    // e.g. when drawer is on the left and is closed we expect left to right gesture, thus\n    // orientation will be 1.\n    const gestureOrientation =\n      (fromLeft ? 1 : -1) * (this._drawerShown ? -1 : 1);\n\n    // When drawer is closed we want the hitSlop to be horizontally shorter\n    // than the container size by the value of SLOP. This will make it only\n    // activate when gesture happens not further than SLOP away from the edge\n    const hitSlop = fromLeft\n      ? { left: 0, width: this._drawerShown ? undefined : edgeWidth }\n      : { right: 0, width: this._drawerShown ? undefined : edgeWidth };\n\n    return (\n      <PanGestureHandler\n        ref={this._setPanGestureRef}\n        hitSlop={hitSlop}\n        activeOffsetX={gestureOrientation * minSwipeDistance}\n        failOffsetY={[-15, 15]}\n        onGestureEvent={this._onGestureEvent}\n        onHandlerStateChange={this._openingHandlerStateChange}\n        enableTrackpadTwoFingerGesture={\n          this.props.enableTrackpadTwoFingerGesture\n        }\n        enabled={\n          drawerLockMode !== 'locked-closed' && drawerLockMode !== 'locked-open'\n        }>\n        {this._renderDrawer()}\n      </PanGestureHandler>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  drawerContainer: {\n    ...StyleSheet.absoluteFillObject,\n    zIndex: 1001,\n    flexDirection: 'row',\n  },\n  containerInFront: {\n    ...StyleSheet.absoluteFillObject,\n    zIndex: 1002,\n  },\n  containerOnBack: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  main: {\n    flex: 1,\n    zIndex: 0,\n    overflow: 'hidden',\n  },\n  overlay: {\n    ...StyleSheet.absoluteFillObject,\n    zIndex: 1000,\n  },\n});\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Animated, Platform, processColor, StyleSheet } from 'react-native';\n\nimport createNativeWrapper from './createNativeWrapper';\nimport GestureHandlerButton from './GestureHandlerButton';\nimport State from './State';\n\nexport const RawButton = createNativeWrapper(GestureHandlerButton, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: false,\n});\n\n/* Buttons */\n\nexport class BaseButton extends React.Component {\n  static propTypes = {\n    ...RawButton.propTypes,\n    onPress: PropTypes.func,\n    onActiveStateChange: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    this._lastActive = false;\n  }\n\n  _handleEvent = ({ nativeEvent }) => {\n    const { state, oldState, pointerInside } = nativeEvent;\n    const active = pointerInside && state === State.ACTIVE;\n\n    if (active !== this._lastActive && this.props.onActiveStateChange) {\n      this.props.onActiveStateChange(active);\n    }\n\n    if (\n      oldState === State.ACTIVE &&\n      state !== State.CANCELLED &&\n      this._lastActive &&\n      this.props.onPress\n    ) {\n      this.props.onPress(active);\n    }\n\n    this._lastActive = active;\n  };\n\n  // Normally, the parent would execute it's handler first,\n  // then forward the event to listeners. However, here our handler\n  // is virtually only forwarding events to listeners, so we reverse the order\n  // to keep the proper order of the callbacks (from \"raw\" ones to \"processed\").\n  _onHandlerStateChange = e => {\n    this.props.onHandlerStateChange && this.props.onHandlerStateChange(e);\n    this._handleEvent(e);\n  };\n\n  _onGestureEvent = e => {\n    this.props.onGestureEvent && this.props.onGestureEvent(e);\n    this._handleEvent(e);\n  };\n\n  render() {\n    const { rippleColor, ...rest } = this.props;\n\n    return (\n      <RawButton\n        rippleColor={processColor(rippleColor)}\n        {...rest}\n        onGestureEvent={this._onGestureEvent}\n        onHandlerStateChange={this._onHandlerStateChange}\n      />\n    );\n  }\n}\n\nconst AnimatedBaseButton = Animated.createAnimatedComponent(BaseButton);\n\nconst btnStyles = StyleSheet.create({\n  underlay: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    top: 0,\n  },\n});\n\nexport class RectButton extends React.Component {\n  static propTypes = BaseButton.propTypes;\n\n  static defaultProps = {\n    activeOpacity: 0.105,\n    underlayColor: 'black',\n  };\n\n  constructor(props) {\n    super(props);\n    this._opacity = new Animated.Value(0);\n  }\n\n  _onActiveStateChange = active => {\n    if (Platform.OS !== 'android') {\n      this._opacity.setValue(active ? this.props.activeOpacity : 0);\n    }\n\n    this.props.onActiveStateChange && this.props.onActiveStateChange(active);\n  };\n\n  render() {\n    const { children, style, ...rest } = this.props;\n\n    const resolvedStyle = StyleSheet.flatten(style ?? {});\n\n    return (\n      <BaseButton\n        {...rest}\n        style={resolvedStyle}\n        onActiveStateChange={this._onActiveStateChange}>\n        <Animated.View\n          style={[\n            btnStyles.underlay,\n            {\n              opacity: this._opacity,\n              backgroundColor: this.props.underlayColor,\n              borderRadius: resolvedStyle.borderRadius,\n              borderTopLeftRadius: resolvedStyle.borderTopLeftRadius,\n              borderTopRightRadius: resolvedStyle.borderTopRightRadius,\n              borderBottomLeftRadius: resolvedStyle.borderBottomLeftRadius,\n              borderBottomRightRadius: resolvedStyle.borderBottomRightRadius,\n            },\n          ]}\n        />\n        {children}\n      </BaseButton>\n    );\n  }\n}\n\nexport class BorderlessButton extends React.Component {\n  static propTypes = {\n    ...BaseButton.propTypes,\n    borderless: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    activeOpacity: 0.3,\n    borderless: true,\n  };\n\n  constructor(props) {\n    super(props);\n    this._opacity = new Animated.Value(1);\n  }\n\n  _onActiveStateChange = active => {\n    if (Platform.OS !== 'android') {\n      this._opacity.setValue(active ? this.props.activeOpacity : 1);\n    }\n\n    this.props.onActiveStateChange && this.props.onActiveStateChange(active);\n  };\n\n  render() {\n    const { children, style, ...rest } = this.props;\n\n    return (\n      <AnimatedBaseButton\n        {...rest}\n        onActiveStateChange={this._onActiveStateChange}\n        style={[style, Platform.OS === 'ios' && { opacity: this._opacity }]}>\n        {children}\n      </AnimatedBaseButton>\n    );\n  }\n}\n\nexport { default as PureNativeButton } from './GestureHandlerButton';\n","import React from 'react';\nimport ReactNative from 'react-native';\n\nimport createNativeWrapper from './createNativeWrapper';\n\nconst MEMOIZED = new WeakMap();\n\nfunction memoizeWrap(Component, config) {\n  if (Component == null) {\n    return null;\n  }\n  let memoized = MEMOIZED.get(Component);\n  if (!memoized) {\n    memoized = createNativeWrapper(Component, config);\n    MEMOIZED.set(Component, memoized);\n  }\n  return memoized;\n}\n\nmodule.exports = {\n  /* RN's components */\n  get ScrollView() {\n    return memoizeWrap(ReactNative.ScrollView, {\n      disallowInterruption: true,\n      shouldCancelWhenOutside: false,\n    });\n  },\n  get Switch() {\n    return memoizeWrap(ReactNative.Switch, {\n      shouldCancelWhenOutside: false,\n      shouldActivateOnStart: true,\n      disallowInterruption: true,\n    });\n  },\n  get TextInput() {\n    return memoizeWrap(ReactNative.TextInput);\n  },\n  get DrawerLayoutAndroid() {\n    const DrawerLayoutAndroid = memoizeWrap(ReactNative.DrawerLayoutAndroid, {\n      disallowInterruption: true,\n    });\n    DrawerLayoutAndroid.positions = ReactNative.DrawerLayoutAndroid.positions;\n    return DrawerLayoutAndroid;\n  },\n  get FlatList() {\n    if (!MEMOIZED.FlatList) {\n      const ScrollView = this.ScrollView;\n      MEMOIZED.FlatList = React.forwardRef((props, ref) => (\n        <ReactNative.FlatList\n          ref={ref}\n          {...props}\n          renderScrollComponent={scrollProps => <ScrollView {...scrollProps} />}\n        />\n      ));\n    }\n    return MEMOIZED.FlatList;\n  },\n};\n","export { default as createNativeWrapper } from './createNativeWrapper';\nexport { default as Directions } from './Directions';\nexport { default as gestureHandlerRootHOC } from './gestureHandlerRootHOC';\nexport { default as GestureHandlerRootView } from './GestureHandlerRootView';\nexport {\n  default as NativeViewGestureHandler,\n} from './NativeViewGestureHandler';\nexport { default as State } from './State';\n\nexport * from './GestureButtons';\nexport * from './GestureComponents';\nexport * from './Gestures';\n","import { requireNativeComponent } from 'react-native';\n\nconst RNGestureHandlerButton = requireNativeComponent(\n  'RNGestureHandlerButton',\n  null\n);\n\nexport default RNGestureHandlerButton;\n","import PropTypes from 'prop-types';\n\n// If changed, add changes to NATIVE_WRAPPER_PROPS_FILTER as well\nconst GestureHandlerPropTypes = {\n  id: PropTypes.string,\n  minPointers: PropTypes.number,\n  enabled: PropTypes.bool,\n  waitFor: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.object])\n    ),\n  ]),\n  simultaneousHandlers: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.object])\n    ),\n  ]),\n  shouldCancelWhenOutside: PropTypes.bool,\n  hitSlop: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.shape({\n      left: PropTypes.number,\n      top: PropTypes.number,\n      right: PropTypes.number,\n      bottom: PropTypes.number,\n      vertical: PropTypes.number,\n      horizontal: PropTypes.number,\n      width: PropTypes.number,\n      height: PropTypes.number,\n    }),\n  ]),\n  onGestureEvent: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  onHandlerStateChange: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  onBegan: PropTypes.func,\n  onFailed: PropTypes.func,\n  onCancelled: PropTypes.func,\n  onActivated: PropTypes.func,\n  onEnded: PropTypes.func,\n};\n\nexport default GestureHandlerPropTypes;\n","import React from 'react';\nimport { View } from 'react-native';\n\nexport default View;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport createHandler from './createHandler';\nimport GestureHandlerPropTypes from './GestureHandlerPropTypes';\nimport PlatformConstants from './PlatformConstants';\n\nexport const TapGestureHandler = createHandler(\n  'TapGestureHandler',\n  {\n    ...GestureHandlerPropTypes,\n    maxDurationMs: PropTypes.number,\n    maxDelayMs: PropTypes.number,\n    numberOfTaps: PropTypes.number,\n    maxDeltaX: PropTypes.number,\n    maxDeltaY: PropTypes.number,\n    maxDist: PropTypes.number,\n    minPointers: PropTypes.number,\n  },\n  {}\n);\n\nexport const FlingGestureHandler = createHandler(\n  'FlingGestureHandler',\n  {\n    ...GestureHandlerPropTypes,\n    numberOfPointers: PropTypes.number,\n    direction: PropTypes.number,\n  },\n  {}\n);\n\nclass ForceTouchFallback extends React.Component {\n  componentDidMount() {\n    console.warn(\n      'ForceTouchGestureHandler is not available on this platform. Please use ForceTouchGestureHandler.forceTouchAvailable to conditionally render other components that would provide a fallback behavior specific to your usecase'\n    );\n  }\n  render() {\n    return this.props.children;\n  }\n}\n\nexport const ForceTouchGestureHandler =\n  PlatformConstants && PlatformConstants.forceTouchAvailable\n    ? createHandler(\n        'ForceTouchGestureHandler',\n        {\n          ...GestureHandlerPropTypes,\n          minForce: PropTypes.number,\n          maxForce: PropTypes.number,\n          feedbackOnActivation: PropTypes.bool,\n        },\n        {}\n      )\n    : ForceTouchFallback;\n\nForceTouchGestureHandler.forceTouchAvailable =\n  (PlatformConstants && PlatformConstants.forceTouchAvailable) || false;\n\nexport const LongPressGestureHandler = createHandler(\n  'LongPressGestureHandler',\n  {\n    ...GestureHandlerPropTypes,\n    minDurationMs: PropTypes.number,\n    maxDist: PropTypes.number,\n  },\n  {}\n);\n\nfunction validatePanGestureHandlerProps(props) {\n  if (props.minDeltaX && props.activeOffsetX) {\n    throw new Error(\n      `It's not supported use minDeltaX with activeOffsetXStart or activeOffsetXEnd`\n    );\n  }\n  if (props.maxDeltaX && props.failOffsetX) {\n    throw new Error(\n      `It's not supported use minDeltaX with activeOffsetXStart or activeOffsetXEnd`\n    );\n  }\n  if (props.minDeltaY && props.activeOffsetY) {\n    throw new Error(\n      `It's not supported use minDeltaX with activeOffsetYStart or activeOffsetYEnd`\n    );\n  }\n  if (props.maxDeltaY && props.failOffsetY) {\n    throw new Error(\n      `It's not supported use minDeltaX with activeOffsetYStart or activeOffsetYEnd`\n    );\n  }\n  if (\n    Array.isArray(props.activeOffsetX) &&\n    (props.activeOffsetX[0] > 0 || props.activeOffsetX[1] < 0)\n  ) {\n    throw new Error(\n      `First element of activeOffsetX should be negative, a the second one should be positive`\n    );\n  }\n\n  if (\n    Array.isArray(props.activeOffsetY) &&\n    (props.activeOffsetY[0] > 0 || props.activeOffsetY[1] < 0)\n  ) {\n    throw new Error(\n      `First element of activeOffsetY should be negative, a the second one should be positive`\n    );\n  }\n\n  if (\n    Array.isArray(props.failOffsetX) &&\n    (props.failOffsetX[0] > 0 || props.failOffsetX[1] < 0)\n  ) {\n    throw new Error(\n      `First element of failOffsetX should be negative, a the second one should be positive`\n    );\n  }\n\n  if (\n    Array.isArray(props.failOffsetY) &&\n    (props.failOffsetY[0] > 0 || props.failOffsetY[1] < 0)\n  ) {\n    throw new Error(\n      `First element of failOffsetY should be negative, a the second one should be positive`\n    );\n  }\n}\n\nfunction transformPanGestureHandlerProps(props) {\n  const res = { ...props };\n  if (props.minDeltaX !== undefined) {\n    delete res['minDeltaX'];\n    res.activeOffsetXStart = -props.minDeltaX;\n    res.activeOffsetXEnd = props.minDeltaX;\n  }\n  if (props.maxDeltaX !== undefined) {\n    delete res['maxDeltaX'];\n    res.failOffsetXStart = -props.maxDeltaX;\n    res.failOffsetXEnd = props.maxDeltaX;\n  }\n  if (props.minOffsetX !== undefined) {\n    delete res['minOffsetX'];\n    if (props.minOffsetX < 0) {\n      res.activeOffsetXStart = props.minOffsetX;\n    } else {\n      res.activeOffsetXEnd = props.minOffsetX;\n    }\n  }\n\n  if (props.minDeltaY !== undefined) {\n    delete res['minDeltaY'];\n    res.activeOffsetYStart = -props.minDeltaY;\n    res.activeOffsetYEnd = props.minDeltaY;\n  }\n  if (props.maxDeltaY !== undefined) {\n    delete res['maxDeltaY'];\n    res.failOffsetYStart = -props.maxDeltaY;\n    res.failOffsetYEnd = props.maxDeltaY;\n  }\n\n  if (props.minOffsetY !== undefined) {\n    delete res['minOffsetY'];\n    if (props.minOffsetY < 0) {\n      res.activeOffsetYStart = props.minOffsetY;\n    } else {\n      res.activeOffsetYEnd = props.minOffsetY;\n    }\n  }\n\n  if (props.activeOffsetX !== undefined) {\n    delete res['activeOffsetX'];\n    if (Array.isArray(props.activeOffsetX)) {\n      res.activeOffsetXStart = props.activeOffsetX[0];\n      res.activeOffsetXEnd = props.activeOffsetX[1];\n    } else if (props.activeOffsetX < 0) {\n      res.activeOffsetXStart = props.activeOffsetX;\n    } else {\n      res.activeOffsetXEnd = props.activeOffsetX;\n    }\n  }\n\n  if (props.activeOffsetY !== undefined) {\n    delete res['activeOffsetY'];\n    if (Array.isArray(props.activeOffsetY)) {\n      res.activeOffsetYStart = props.activeOffsetY[0];\n      res.activeOffsetYEnd = props.activeOffsetY[1];\n    } else if (props.activeOffsetY < 0) {\n      res.activeOffsetYStart = props.activeOffsetY;\n    } else {\n      res.activeOffsetYEnd = props.activeOffsetY;\n    }\n  }\n\n  if (props.failOffsetX !== undefined) {\n    delete res['failOffsetX'];\n    if (Array.isArray(props.failOffsetX)) {\n      res.failOffsetXStart = props.failOffsetX[0];\n      res.failOffsetXEnd = props.failOffsetX[1];\n    } else if (props.failOffsetX < 0) {\n      res.failOffsetXStart = props.failOffsetX;\n    } else {\n      res.failOffsetXEnd = props.failOffsetX;\n    }\n  }\n\n  if (props.failOffsetY !== undefined) {\n    delete res['failOffsetY'];\n    if (Array.isArray(props.failOffsetY)) {\n      res.failOffsetYStart = props.failOffsetY[0];\n      res.failOffsetYEnd = props.failOffsetY[1];\n    } else if (props.failOffsetY < 0) {\n      res.failOffsetYStart = props.failOffsetY;\n    } else {\n      res.failOffsetYEnd = props.failOffsetY;\n    }\n  }\n\n  return res;\n}\n\nfunction managePanProps(props) {\n  if (__DEV__) {\n    validatePanGestureHandlerProps(props);\n  }\n  return transformPanGestureHandlerProps(props);\n}\n\nexport const PanGestureHandler = createHandler(\n  'PanGestureHandler',\n  {\n    ...GestureHandlerPropTypes,\n    activeOffsetY: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.arrayOf(PropTypes.number),\n    ]),\n    activeOffsetX: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.arrayOf(PropTypes.number),\n    ]),\n    failOffsetY: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.arrayOf(PropTypes.number),\n    ]),\n    failOffsetX: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.arrayOf(PropTypes.number),\n    ]),\n    minDist: PropTypes.number,\n    minVelocity: PropTypes.number,\n    minVelocityX: PropTypes.number,\n    minVelocityY: PropTypes.number,\n    minPointers: PropTypes.number,\n    maxPointers: PropTypes.number,\n    avgTouches: PropTypes.bool,\n    enableTrackpadTwoFingerGesture: PropTypes.bool,\n  },\n  {},\n  managePanProps,\n  {\n    activeOffsetYStart: true,\n    activeOffsetYEnd: true,\n    activeOffsetXStart: true,\n    activeOffsetXEnd: true,\n    failOffsetYStart: true,\n    failOffsetYEnd: true,\n    failOffsetXStart: true,\n    failOffsetXEnd: true,\n  }\n);\nexport const PinchGestureHandler = createHandler(\n  'PinchGestureHandler',\n  GestureHandlerPropTypes,\n  {}\n);\nexport const RotationGestureHandler = createHandler(\n  'RotationGestureHandler',\n  GestureHandlerPropTypes,\n  {}\n);\n","import PropTypes from 'prop-types';\n\nimport createHandler from './createHandler';\nimport GestureHandlerPropTypes from './GestureHandlerPropTypes';\n\nconst NativeViewGestureHandler = createHandler('NativeViewGestureHandler', {\n  ...GestureHandlerPropTypes,\n\n  // If changed, add changes to NATIVE_WRAPPER_PROPS_FILTER as well\n  shouldActivateOnStart: PropTypes.bool,\n  disallowInterruption: PropTypes.bool,\n});\n\nexport default NativeViewGestureHandler;\n","import { NativeModules } from 'react-native';\n\nexport default NativeModules.PlatformConstants;\n","import { NativeModules } from 'react-native';\n\nconst { RNGestureHandlerModule } = NativeModules;\n\nexport default RNGestureHandlerModule;\n","const State = {\n  UNDETERMINED: 0,\n  FAILED: 1,\n  BEGAN: 2,\n  CANCELLED: 3,\n  ACTIVE: 4,\n  END: 5,\n};\n\nState.print = state => {\n  const keys = Object.keys(State);\n  for (let i = 0; i < keys.length; i++) {\n    if (state === State[keys[i]]) {\n      return keys[i];\n    }\n  }\n};\n\nexport default State;\n","// @flow\n\n// Similarily to the DrawerLayout component this deserves to be put in a\n// separate repo. Although, keeping it here for the time being will allow us\n// to move faster and fix possible issues quicker\n\nimport React, { Component } from 'react';\nimport { Animated, StyleSheet, View, I18nManager } from 'react-native';\n\nimport { PanGestureHandler, TapGestureHandler, State } from './GestureHandler';\n\nconst DRAG_TOSS = 0.05;\n\nexport type PropType = {\n  children: any,\n  friction: number,\n  leftThreshold?: number,\n  rightThreshold?: number,\n  overshootLeft?: boolean,\n  overshootRight?: boolean,\n  overshootFriction: number,\n  onSwipeableLeftOpen?: Function,\n  onSwipeableRightOpen?: Function,\n  onSwipeableOpen?: Function,\n  onSwipeableClose?: Function,\n  onSwipeableLeftWillOpen?: Function,\n  onSwipeableRightWillOpen?: Function,\n  onSwipeableWillOpen?: Function,\n  onSwipeableWillClose?: Function,\n  renderLeftActions?: (\n    progressAnimatedValue: any,\n    dragAnimatedValue: any\n  ) => any,\n  renderRightActions?: (\n    progressAnimatedValue: any,\n    dragAnimatedValue: any\n  ) => any,\n  useNativeAnimations: boolean,\n  animationOptions?: Object,\n  containerStyle?: Object,\n  childrenContainerStyle?: Object,\n};\ntype StateType = {\n  dragX: Animated.Value,\n  rowTranslation: Animated.Value,\n  rowState: number,\n  leftWidth: number | typeof undefined,\n  rightOffset: number | typeof undefined,\n  rowWidth: number | typeof undefined,\n};\n\nexport default class Swipeable extends Component<PropType, StateType> {\n  static defaultProps = {\n    friction: 1,\n    overshootFriction: 1,\n    useNativeAnimations: true,\n  };\n  _onGestureEvent: ?Animated.Event;\n  _transX: ?Animated.Interpolation;\n  _showLeftAction: ?Animated.Interpolation | ?Animated.Value;\n  _leftActionTranslate: ?Animated.Interpolation;\n  _showRightAction: ?Animated.Interpolation | ?Animated.Value;\n  _rightActionTranslate: ?Animated.Interpolation;\n\n  constructor(props: PropType) {\n    super(props);\n    const dragX = new Animated.Value(0);\n    this.state = {\n      dragX,\n      rowTranslation: new Animated.Value(0),\n      rowState: 0,\n      leftWidth: undefined,\n      rightOffset: undefined,\n      rowWidth: undefined,\n    };\n    this._updateAnimatedEvent(props, this.state);\n\n    this._onGestureEvent = Animated.event(\n      [{ nativeEvent: { translationX: dragX } }],\n      { useNativeDriver: props.useNativeAnimations }\n    );\n  }\n\n  UNSAFE_componentWillUpdate(props: PropType, state: StateType) {\n    if (\n      this.props.friction !== props.friction ||\n      this.props.overshootLeft !== props.overshootLeft ||\n      this.props.overshootRight !== props.overshootRight ||\n      this.props.overshootFriction !== props.overshootFriction ||\n      this.state.leftWidth !== state.leftWidth ||\n      this.state.rightOffset !== state.rightOffset ||\n      this.state.rowWidth !== state.rowWidth\n    ) {\n      this._updateAnimatedEvent(props, state);\n    }\n  }\n\n  _updateAnimatedEvent = (props: PropType, state: StateType) => {\n    const { friction, overshootFriction, useNativeAnimations } = props;\n    const { dragX, rowTranslation, leftWidth = 0, rowWidth = 0 } = state;\n    const { rightOffset = rowWidth } = state;\n    const rightWidth = Math.max(0, rowWidth - rightOffset);\n\n    const {\n      overshootLeft = leftWidth > 0,\n      overshootRight = rightWidth > 0,\n    } = props;\n\n    const transX = Animated.add(\n      rowTranslation,\n      dragX.interpolate({\n        inputRange: [0, friction],\n        outputRange: [0, 1],\n      })\n    ).interpolate({\n      inputRange: [\n        -rightWidth - (overshootRight ? 1 : overshootFriction),\n        -rightWidth,\n        leftWidth,\n        leftWidth + (overshootLeft ? 1 : overshootFriction),\n      ],\n      outputRange: [\n        -rightWidth - (overshootRight || overshootFriction > 1 ? 1 : 0),\n        -rightWidth,\n        leftWidth,\n        leftWidth + (overshootLeft || overshootFriction > 1 ? 1 : 0),\n      ],\n    });\n    this._transX = transX;\n    this._showLeftAction =\n      leftWidth > 0\n        ? transX.interpolate({\n            inputRange: [-1, 0, leftWidth],\n            outputRange: [0, 0, 1],\n          })\n        : new Animated.Value(0);\n    this._leftActionTranslate = this._showLeftAction.interpolate({\n      inputRange: [0, Number.MIN_VALUE],\n      outputRange: [-10000, 0],\n      extrapolate: 'clamp',\n    });\n    this._showRightAction =\n      rightWidth > 0\n        ? transX.interpolate({\n            inputRange: [-rightWidth, 0, 1],\n            outputRange: [1, 0, 0],\n          })\n        : new Animated.Value(0);\n    this._rightActionTranslate = this._showRightAction.interpolate({\n      inputRange: [0, Number.MIN_VALUE],\n      outputRange: [-10000, 0],\n      extrapolate: 'clamp',\n    });\n  };\n\n  _onTapHandlerStateChange = ({ nativeEvent }) => {\n    if (nativeEvent.oldState === State.ACTIVE) {\n      this.close();\n    }\n  };\n\n  _onHandlerStateChange = ({ nativeEvent }) => {\n    if (nativeEvent.oldState === State.ACTIVE) {\n      this._handleRelease(nativeEvent);\n    }\n  };\n\n  _handleRelease = nativeEvent => {\n    const { velocityX, translationX: dragX } = nativeEvent;\n    const { leftWidth = 0, rowWidth = 0, rowState } = this.state;\n    const { rightOffset = rowWidth } = this.state;\n    const rightWidth = rowWidth - rightOffset;\n    const {\n      friction,\n      leftThreshold = leftWidth / 2,\n      rightThreshold = rightWidth / 2,\n    } = this.props;\n\n    const startOffsetX = this._currentOffset() + dragX / friction;\n    const translationX = (dragX + DRAG_TOSS * velocityX) / friction;\n\n    let toValue = 0;\n    if (rowState === 0) {\n      if (translationX > leftThreshold) {\n        toValue = leftWidth;\n      } else if (translationX < -rightThreshold) {\n        toValue = -rightWidth;\n      }\n    } else if (rowState === 1) {\n      // swiped to left\n      if (translationX > -leftThreshold) {\n        toValue = leftWidth;\n      }\n    } else {\n      // swiped to right\n      if (translationX < rightThreshold) {\n        toValue = -rightWidth;\n      }\n    }\n\n    this._animateRow(startOffsetX, toValue, velocityX / friction);\n  };\n\n  _animateRow = (fromValue, toValue, velocityX) => {\n    const { dragX, rowTranslation } = this.state;\n    dragX.setValue(0);\n    rowTranslation.setValue(fromValue);\n\n    this.setState({ rowState: Math.sign(toValue) });\n    Animated.spring(rowTranslation, {\n      restSpeedThreshold: 1.7,\n      restDisplacementThreshold: 0.4,\n      velocity: velocityX,\n      bounciness: 0,\n      toValue,\n      useNativeDriver: this.props.useNativeAnimations,\n      ...this.props.animationOptions,\n    }).start(({ finished }) => {\n      if (finished) {\n        if (toValue > 0 && this.props.onSwipeableLeftOpen) {\n          this.props.onSwipeableLeftOpen();\n        } else if (toValue < 0 && this.props.onSwipeableRightOpen) {\n          this.props.onSwipeableRightOpen();\n        }\n\n        if (toValue === 0) {\n          this.props.onSwipeableClose && this.props.onSwipeableClose();\n        } else {\n          this.props.onSwipeableOpen && this.props.onSwipeableOpen();\n        }\n      }\n    });\n    if (toValue > 0 && this.props.onSwipeableLeftWillOpen) {\n      this.props.onSwipeableLeftWillOpen();\n    } else if (toValue < 0 && this.props.onSwipeableRightWillOpen) {\n      this.props.onSwipeableRightWillOpen();\n    }\n\n    if (toValue === 0) {\n      this.props.onSwipeableWillClose && this.props.onSwipeableWillClose();\n    } else {\n      this.props.onSwipeableWillOpen && this.props.onSwipeableWillOpen();\n    }\n  };\n\n  _onRowLayout = ({ nativeEvent }) => {\n    this.setState({ rowWidth: nativeEvent.layout.width });\n  };\n\n  _currentOffset = () => {\n    const { leftWidth = 0, rowWidth = 0, rowState } = this.state;\n    const { rightOffset = rowWidth } = this.state;\n    const rightWidth = rowWidth - rightOffset;\n    if (rowState === 1) {\n      return leftWidth;\n    } else if (rowState === -1) {\n      return -rightWidth;\n    }\n    return 0;\n  };\n\n  close = () => {\n    this._animateRow(this._currentOffset(), 0);\n  };\n\n  openLeft = () => {\n    const { leftWidth = 0 } = this.state;\n    this._animateRow(this._currentOffset(), leftWidth);\n  };\n\n  openRight = () => {\n    const { rowWidth = 0 } = this.state;\n    const { rightOffset = rowWidth } = this.state;\n    const rightWidth = rowWidth - rightOffset;\n    this._animateRow(this._currentOffset(), -rightWidth);\n  };\n\n  render() {\n    const { rowState } = this.state;\n    const { children, renderLeftActions, renderRightActions } = this.props;\n\n    const left = renderLeftActions && (\n      <Animated.View\n        style={[\n          styles.leftActions,\n          { transform: [{ translateX: this._leftActionTranslate }] },\n        ]}>\n        {renderLeftActions(this._showLeftAction, this._transX)}\n        <View\n          onLayout={({ nativeEvent }) =>\n            this.setState({ leftWidth: nativeEvent.layout.x })\n          }\n        />\n      </Animated.View>\n    );\n\n    const right = renderRightActions && (\n      <Animated.View\n        style={[\n          styles.rightActions,\n          { transform: [{ translateX: this._rightActionTranslate }] },\n        ]}>\n        {renderRightActions(this._showRightAction, this._transX)}\n        <View\n          onLayout={({ nativeEvent }) =>\n            this.setState({ rightOffset: nativeEvent.layout.x })\n          }\n        />\n      </Animated.View>\n    );\n\n    return (\n      <PanGestureHandler\n        activeOffsetX={[-10, 10]}\n        {...this.props}\n        onGestureEvent={this._onGestureEvent}\n        onHandlerStateChange={this._onHandlerStateChange}>\n        <Animated.View\n          onLayout={this._onRowLayout}\n          style={[styles.container, this.props.containerStyle]}>\n          {left}\n          {right}\n          <TapGestureHandler\n            enabled={rowState !== 0}\n            onHandlerStateChange={this._onTapHandlerStateChange}>\n            <Animated.View\n              pointerEvents={rowState === 0 ? 'auto' : 'box-only'}\n              style={[\n                {\n                  transform: [{ translateX: this._transX }],\n                },\n                this.props.childrenContainerStyle,\n              ]}>\n              {children}\n            </Animated.View>\n          </TapGestureHandler>\n        </Animated.View>\n      </PanGestureHandler>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n  },\n  leftActions: {\n    ...StyleSheet.absoluteFillObject,\n    flexDirection: I18nManager.isRTL? 'row-reverse': 'row',\n  },\n  rightActions: {\n    ...StyleSheet.absoluteFillObject,\n    flexDirection: I18nManager.isRTL ? 'row' : 'row-reverse',\n  },\n});\n","import React from 'react';\nimport {\n  findNodeHandle as findNodeHandleRN,\n  NativeModules,\n  Touchable,\n  Platform,\n} from 'react-native';\nimport deepEqual from 'fbjs/lib/areEqual';\nimport RNGestureHandlerModule from './RNGestureHandlerModule';\nimport State from './State';\n\nfunction findNodeHandle(node) {\n  if (Platform.OS === 'web') return node;\n  return findNodeHandleRN(node);\n}\n\nconst { UIManager = {} } = NativeModules;\n\nconst customGHEventsConfig = {\n  onGestureHandlerEvent: { registrationName: 'onGestureHandlerEvent' },\n  onGestureHandlerStateChange: {\n    registrationName: 'onGestureHandlerStateChange',\n  },\n};\n\n// Add gesture specific events to genericDirectEventTypes object exported from UIManager\n// native module.\n// Once new event types are registered with react it is possible to dispatch these\n// events to all kind of native views.\nUIManager.genericDirectEventTypes = {\n  ...UIManager.genericDirectEventTypes,\n  ...customGHEventsConfig,\n};\n// In newer versions of RN the `genericDirectEventTypes` is located in the object\n// returned by UIManager.getConstants(), we need to add it there as well to make\n// it compatible with RN 61+\nif (UIManager.getConstants) {\n  UIManager.getConstants().genericDirectEventTypes = {\n    ...UIManager.getConstants().genericDirectEventTypes,\n    ...customGHEventsConfig,\n  };\n}\n\n// Wrap JS responder calls and notify gesture handler manager\nconst {\n  setJSResponder: oldSetJSResponder = () => {},\n  clearJSResponder: oldClearJSResponder = () => {},\n} = UIManager;\nUIManager.setJSResponder = (tag, blockNativeResponder) => {\n  RNGestureHandlerModule.handleSetJSResponder(tag, blockNativeResponder);\n  oldSetJSResponder(tag, blockNativeResponder);\n};\nUIManager.clearJSResponder = () => {\n  RNGestureHandlerModule.handleClearJSResponder();\n  oldClearJSResponder();\n};\n\nlet handlerTag = 1;\nconst handlerIDToTag = {};\n\nfunction isConfigParam(param, name) {\n  // param !== Object(param) returns false if `param` is a function\n  // or an object and returns true if `param` is null\n  return (\n    param !== undefined &&\n    (param !== Object(param) || !('__isNative' in param)) &&\n    name !== 'onHandlerStateChange' &&\n    name !== 'onGestureEvent'\n  );\n}\n\nfunction filterConfig(props, validProps, defaults = {}) {\n  const res = { ...defaults };\n  Object.keys(validProps).forEach(key => {\n    const value = props[key];\n    if (isConfigParam(value, key)) {\n      let value = props[key];\n      if (key === 'simultaneousHandlers' || key === 'waitFor') {\n        value = transformIntoHandlerTags(props[key]);\n      } else if (key === 'hitSlop') {\n        if (typeof value !== 'object') {\n          value = { top: value, left: value, bottom: value, right: value };\n        }\n      }\n      res[key] = value;\n    }\n  });\n  return res;\n}\n\nfunction transformIntoHandlerTags(handlerIDs) {\n  if (!Array.isArray(handlerIDs)) {\n    handlerIDs = [handlerIDs];\n  }\n\n  if (Platform.OS === 'web') {\n    return handlerIDs.map(({ current }) => current).filter(handle => handle);\n  }\n  // converts handler string IDs into their numeric tags\n  return handlerIDs\n    .map(\n      handlerID =>\n        handlerIDToTag[handlerID] ||\n        (handlerID.current && handlerID.current._handlerTag) ||\n        -1\n    )\n    .filter(handlerTag => handlerTag > 0);\n}\n\nfunction hasUnresolvedRefs(props) {\n  const extract = refs => {\n    if (!Array.isArray(refs)) {\n      return refs && refs.current === null;\n    }\n    return refs.some(r => r && r.current === null);\n  };\n  return extract(props['simultaneousHandlers']) || extract(props['waitFor']);\n}\n\nconst stateToPropMappings = {\n  [State.BEGAN]: 'onBegan',\n  [State.FAILED]: 'onFailed',\n  [State.CANCELLED]: 'onCancelled',\n  [State.ACTIVE]: 'onActivated',\n  [State.END]: 'onEnded',\n};\n\nexport default function createHandler(\n  handlerName,\n  propTypes = {},\n  config = {},\n  transformProps,\n  customNativeProps = {}\n) {\n  class Handler extends React.Component {\n    static displayName = handlerName;\n\n    static propTypes = propTypes;\n\n    constructor(props) {\n      super(props);\n      this._handlerTag = handlerTag++;\n      this._config = {};\n      this._propsRef = React.createRef(props);\n\n      if (props.id) {\n        if (handlerIDToTag[props.id] !== undefined) {\n          throw new Error(`Handler with ID \"${props.id}\" already registered`);\n        }\n        handlerIDToTag[props.id] = this._handlerTag;\n      }\n    }\n\n    _onGestureHandlerEvent = event => {\n      if (event.nativeEvent.handlerTag === this._handlerTag) {\n        this.props.onGestureEvent && this.props.onGestureEvent(event);\n      } else {\n        this.props.onGestureHandlerEvent &&\n          this.props.onGestureHandlerEvent(event);\n      }\n    };\n\n    _onGestureHandlerStateChange = event => {\n      if (event.nativeEvent.handlerTag === this._handlerTag) {\n        this.props.onHandlerStateChange &&\n          this.props.onHandlerStateChange(event);\n\n        const stateEventName = stateToPropMappings[event.nativeEvent.state];\n        if (typeof this.props[stateEventName] === 'function') {\n          this.props[stateEventName](event);\n        }\n      } else {\n        this.props.onGestureHandlerStateChange &&\n          this.props.onGestureHandlerStateChange(event);\n      }\n    };\n\n    _refHandler = node => {\n      this._viewNode = node;\n\n      const child = React.Children.only(this.props.children);\n      const { ref } = child;\n      if (ref !== null) {\n        if (typeof ref === 'function') {\n          ref(node);\n        } else {\n          ref.current = node;\n        }\n      }\n    };\n\n    _createGestureHandler = newConfig => {\n      this._config = newConfig;\n\n      RNGestureHandlerModule.createGestureHandler(\n        handlerName,\n        this._handlerTag,\n        newConfig\n      );\n    };\n\n    _attachGestureHandler = newViewTag => {\n      this._viewTag = newViewTag;\n\n      if (Platform.OS === 'web') {\n        RNGestureHandlerModule.attachGestureHandler(\n          this._handlerTag,\n          newViewTag,\n          this._propsRef\n        );\n      } else {\n        RNGestureHandlerModule.attachGestureHandler(\n          this._handlerTag,\n          newViewTag\n        );\n      }\n    };\n\n    _updateGestureHandler = newConfig => {\n      this._config = newConfig;\n\n      RNGestureHandlerModule.updateGestureHandler(this._handlerTag, newConfig);\n    };\n\n    componentWillUnmount() {\n      RNGestureHandlerModule.dropGestureHandler(this._handlerTag);\n      if (this._updateEnqueued) {\n        clearImmediate(this._updateEnqueued);\n      }\n      if (this.props.id) {\n        delete handlerIDToTag[this.props.id];\n      }\n    }\n\n    componentDidMount() {\n      if (hasUnresolvedRefs(this.props)) {\n        // If there are unresolved refs (e.g. \".current\" has not yet been set)\n        // passed as `simultaneousHandlers` or `waitFor`, we enqueue a call to\n        // _update method that will try to update native handler props using\n        // setImmediate. This makes it so _update function gets called after all\n        // react components are mounted and we expect the missing ref object to\n        // be resolved by then.\n        this._updateEnqueued = setImmediate(() => {\n          this._updateEnqueued = null;\n          this._update();\n        });\n      }\n\n      this._createGestureHandler(\n        filterConfig(\n          transformProps ? transformProps(this.props) : this.props,\n          {\n            ...(this.constructor.propTypes || propTypes),\n            ...customNativeProps,\n          },\n          config\n        )\n      );\n\n      this._attachGestureHandler(findNodeHandle(this._viewNode));\n    }\n\n    componentDidUpdate() {\n      const viewTag = findNodeHandle(this._viewNode);\n      if (this._viewTag !== viewTag) {\n        this._attachGestureHandler(viewTag);\n      }\n      this._update();\n    }\n\n    _update() {\n      const newConfig = filterConfig(\n        transformProps ? transformProps(this.props) : this.props,\n        { ...(this.constructor.propTypes || propTypes), ...customNativeProps },\n        config\n      );\n      if (!deepEqual(this._config, newConfig)) {\n        this._updateGestureHandler(newConfig);\n      }\n    }\n\n    setNativeProps(updates) {\n      const mergedProps = { ...this.props, ...updates };\n      const newConfig = filterConfig(\n        transformProps ? transformProps(mergedProps) : mergedProps,\n        { ...(this.constructor.propTypes || propTypes), ...customNativeProps },\n        config\n      );\n      this._updateGestureHandler(newConfig);\n    }\n\n    render() {\n      let gestureEventHandler = this._onGestureHandlerEvent;\n      const { onGestureEvent, onGestureHandlerEvent } = this.props;\n      if (onGestureEvent && typeof onGestureEvent !== 'function') {\n        // If it's not a method it should be an native Animated.event\n        // object. We set it directly as the handler for the view\n        // In this case nested handlers are not going to be supported\n        if (onGestureHandlerEvent) {\n          throw new Error(\n            'Nesting touch handlers with native animated driver is not supported yet'\n          );\n        }\n        gestureEventHandler = this.props.onGestureEvent;\n      } else {\n        if (\n          onGestureHandlerEvent &&\n          typeof onGestureHandlerEvent !== 'function'\n        ) {\n          throw new Error(\n            'Nesting touch handlers with native animated driver is not supported yet'\n          );\n        }\n      }\n\n      let gestureStateEventHandler = this._onGestureHandlerStateChange;\n      const { onHandlerStateChange, onGestureHandlerStateChange } = this.props;\n      if (onHandlerStateChange && typeof onHandlerStateChange !== 'function') {\n        // If it's not a method it should be an native Animated.event\n        // object. We set it directly as the handler for the view\n        // In this case nested handlers are not going to be supported\n        if (onGestureHandlerStateChange) {\n          throw new Error(\n            'Nesting touch handlers with native animated driver is not supported yet'\n          );\n        }\n        gestureStateEventHandler = this.props.onHandlerStateChange;\n      } else {\n        if (\n          onGestureHandlerStateChange &&\n          typeof onGestureHandlerStateChange !== 'function'\n        ) {\n          throw new Error(\n            'Nesting touch handlers with native animated driver is not supported yet'\n          );\n        }\n      }\n      const events = {\n        onGestureHandlerEvent: gestureEventHandler,\n        onGestureHandlerStateChange: gestureStateEventHandler,\n      };\n\n      this._propsRef.current = events;\n\n      const child = React.Children.only(this.props.children);\n      let grandChildren = child.props.children;\n      if (\n        Touchable.TOUCH_TARGET_DEBUG &&\n        child.type &&\n        (child.type === 'RNGestureHandlerButton' ||\n          child.type.name === 'View' ||\n          child.type.displayName === 'View')\n      ) {\n        grandChildren = React.Children.toArray(grandChildren);\n        grandChildren.push(\n          Touchable.renderDebugView({\n            color: 'mediumspringgreen',\n            hitSlop: child.props.hitSlop,\n          })\n        );\n      }\n\n      return React.cloneElement(\n        child,\n        {\n          ref: this._refHandler,\n          collapsable: false,\n          ...events,\n        },\n        grandChildren\n      );\n    }\n  }\n  return Handler;\n}\n","import React from 'react';\n\nimport NativeViewGestureHandler from './NativeViewGestureHandler';\n\n/*\n * This array should consist of:\n *   - All keys in propTypes from NativeGestureHandler\n *     (and all keys in GestureHandlerPropTypes)\n *   - 'onGestureHandlerEvent'\n *   - 'onGestureHandlerStateChange'\n */\nconst NATIVE_WRAPPER_PROPS_FILTER = [\n  'id',\n  'minPointers',\n  'enabled',\n  'waitFor',\n  'simultaneousHandlers',\n  'shouldCancelWhenOutside',\n  'hitSlop',\n  'onGestureEvent',\n  'onHandlerStateChange',\n  'onBegan',\n  'onFailed',\n  'onCancelled',\n  'onActivated',\n  'onEnded',\n  'shouldActivateOnStart',\n  'disallowInterruption',\n  'onGestureHandlerEvent',\n  'onGestureHandlerStateChange',\n];\n\nexport default function createNativeWrapper(Component, config = {}) {\n  const ComponentWrapper = React.forwardRef((props, ref) => {\n    // filter out props that should be passed to gesture handler wrapper\n    const gestureHandlerProps = Object.keys(props).reduce(\n      (res, key) => {\n        if (NATIVE_WRAPPER_PROPS_FILTER.indexOf(key) !== -1) {\n          res[key] = props[key];\n        }\n        return res;\n      },\n      { ...config } // watch out not to modify config\n    );\n    return (\n      <NativeViewGestureHandler {...gestureHandlerProps}>\n        <Component {...props} ref={ref} />\n      </NativeViewGestureHandler>\n    );\n  });\n\n  ComponentWrapper.propTypes = {\n    ...Component.propTypes,\n  };\n  ComponentWrapper.displayName = Component.displayName || 'ComponentWrapper';\n\n  return ComponentWrapper;\n}\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport GestureHandlerRootView from './GestureHandlerRootView';\n\nexport default function gestureHandlerRootHOC(\n  Component,\n  containerStyles = undefined\n) {\n  function Wrapper(props) {\n    return (\n      <GestureHandlerRootView style={[styles.container, containerStyles]}>\n        <Component {...props} />\n      </GestureHandlerRootView>\n    );\n  }\n\n  Wrapper.displayName = `gestureHandlerRootHOC(${Component.displayName ||\n    Component.name})`;\n\n  hoistNonReactStatics(Wrapper, Component);\n\n  return Wrapper;\n}\n\nconst styles = StyleSheet.create({\n  container: { flex: 1 },\n});\n","export { default as Swipeable } from './Swipeable';\nexport { default as DrawerLayout } from './DrawerLayout';\nexport * from './GestureHandler';\nexport * from './touchables';\n","import React, { Component } from 'react';\nimport { Animated, Platform } from 'react-native';\nimport { State, BaseButton } from '../GestureHandler';\nimport PropTypes from 'prop-types';\n\n/**\n * Each touchable is a states' machine which preforms transitions.\n * On very beginning (and on the very end or recognition) touchable is\n * UNDETERMINED. Then it moves to BEGAN. If touchable recognizes that finger\n * travel outside it transits to special MOVED_OUTSIDE state. Gesture recognition\n * finishes in UNDETERMINED state.\n */\nexport const TOUCHABLE_STATE = {\n  UNDETERMINED: 0,\n  BEGAN: 1,\n  MOVED_OUTSIDE: 2,\n};\n\nconst PublicPropTypes = {\n  // Decided to drop not used fields from RN's implementation.\n  // e.g. onBlur and onFocus as well as deprecated props.\n  accessible: PropTypes.bool,\n  accessibilityLabel: PropTypes.node,\n  accessibilityHint: PropTypes.string,\n  hitSlop: PropTypes.shape({\n    top: PropTypes.number,\n    left: PropTypes.number,\n    bottom: PropTypes.number,\n    right: PropTypes.number,\n  }),\n  disabled: PropTypes.bool,\n  onPress: PropTypes.func,\n  onPressIn: PropTypes.func,\n  onPressOut: PropTypes.func,\n  onLayout: PropTypes.func,\n  onLongPress: PropTypes.func,\n  nativeID: PropTypes.string,\n  testID: PropTypes.string,\n  delayPressIn: PropTypes.number,\n  delayPressOut: PropTypes.number,\n  delayLongPress: PropTypes.number,\n  shouldActivateOnStart: PropTypes.bool,\n  disallowInterruption: PropTypes.bool,\n};\n\nconst InternalPropTypes = {\n  extraButtonProps: PropTypes.object,\n  onStateChange: PropTypes.func,\n};\n\n/**\n * GenericTouchable is not intented to be used as it.\n * Should be treated as a source for the rest of touchables\n */\n\nexport default class GenericTouchable extends Component {\n  static publicPropTypes = PublicPropTypes;\n  static internalPropTypes = InternalPropTypes;\n\n  // The prop type collections have to be outside of the class, as metro\n  // at this time does not compile `this.foo` correctly if HMR is enabled.\n  // https://github.com/software-mansion/react-native-gesture-handler/pull/406#issuecomment-453779977\n  static propTypes = {\n    ...InternalPropTypes,\n    ...PublicPropTypes,\n  };\n\n  static defaultProps = {\n    delayLongPress: 600,\n    extraButtonProps: {\n      rippleColor: 'transparent',\n    },\n  };\n\n  // timeout handlers\n  pressInTimeout;\n  pressOutTimeout;\n  longPressTimeout;\n\n  // This flag is required since recognition of longPress implies not-invoking onPress\n  longPressDetected = false;\n\n  pointerInside = true;\n\n  // State of touchable\n  STATE = TOUCHABLE_STATE.UNDETERMINED;\n\n  // handlePressIn in called on first touch on traveling inside component.\n  // Handles state transition with delay.\n  handlePressIn() {\n    if (this.props.delayPressIn) {\n      this.pressInTimeout = setTimeout(() => {\n        this.moveToState(TOUCHABLE_STATE.BEGAN);\n        this.pressInTimeout = null;\n      }, this.props.delayPressIn);\n    } else {\n      this.moveToState(TOUCHABLE_STATE.BEGAN);\n    }\n    if (this.props.onLongPress) {\n      const time =\n        (this.props.delayPressIn || 0) + (this.props.delayLongPress || 0);\n      this.longPressTimeout = setTimeout(this.onLongPressDetected, time);\n    }\n  }\n  // handleMoveOutside in called on traveling outside component.\n  // Handles state transition with delay.\n  handleMoveOutside() {\n    if (this.props.delayPressOut) {\n      this.pressOutTimeout =\n        this.pressOutTimeout ||\n        setTimeout(() => {\n          this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\n          this.pressOutTimeout = null;\n        }, this.props.delayPressOut);\n    } else {\n      this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\n    }\n  }\n\n  // handleGoToUndetermined transits to UNDETERMINED state with proper delay\n  handleGoToUndetermined() {\n    clearTimeout(this.pressOutTimeout);\n    if (this.props.delayPressOut) {\n      this.pressOutTimeout = setTimeout(() => {\n        if (this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n          this.moveToState(TOUCHABLE_STATE.BEGAN);\n        }\n        this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n        this.pressOutTimeout = null;\n      }, this.props.delayPressOut);\n    } else {\n      if (this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n        this.moveToState(TOUCHABLE_STATE.BEGAN);\n      }\n      this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n    }\n  }\n\n  componentDidMount() {\n    this.reset();\n  }\n  // reset timeout to prevent memory leaks.\n  reset() {\n    this.longPressDetected = false;\n    this.pointerInside = true;\n    clearTimeout(this.pressInTimeout);\n    clearTimeout(this.pressOutTimeout);\n    clearTimeout(this.longPressTimeout);\n    this.pressOutTimeout = null;\n    this.longPressTimeout = null;\n    this.pressInTimeout = null;\n  }\n\n  // All states' transitions are defined here.\n  moveToState(newState) {\n    if (newState === this.STATE) {\n      // Ignore dummy transitions\n      return;\n    }\n    if (newState === TOUCHABLE_STATE.BEGAN) {\n      // First touch and moving inside\n      this.props.onPressIn && this.props.onPressIn();\n    } else if (newState === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n      // Moving outside\n      this.props.onPressOut && this.props.onPressOut();\n    } else if (newState === TOUCHABLE_STATE.UNDETERMINED) {\n      // Need to reset each time on transition to UNDETERMINED\n      this.reset();\n      if (this.STATE === TOUCHABLE_STATE.BEGAN) {\n        // ... and if it happens inside button.\n        this.props.onPressOut && this.props.onPressOut();\n      }\n    }\n    // Finally call lister (used by subclasses)\n    this.props.onStateChange && this.props.onStateChange(this.STATE, newState);\n    // ... and make transition.\n    this.STATE = newState;\n  }\n\n  onGestureEvent = ({ nativeEvent: { pointerInside } }) => {\n    if (this.pointerInside !== pointerInside) {\n      if (pointerInside) {\n        this.onMoveIn();\n      } else {\n        this.onMoveOut();\n      }\n    }\n    this.pointerInside = pointerInside;\n  };\n\n  onHandlerStateChange = ({ nativeEvent }) => {\n    const { state } = nativeEvent;\n    if (state === State.CANCELLED || state === State.FAILED) {\n      // Need to handle case with external cancellation (e.g. by ScrollView)\n      this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n    } else if (\n      // This platform check is an implication of slightly different behavior of handlers on different platform.\n      // And Android \"Active\" state is achieving on first move of a finger, not on press in.\n      // On iOS event on \"Began\" is not delivered.\n      state === (Platform.OS !== 'android' ? State.ACTIVE : State.BEGAN) &&\n      this.STATE === TOUCHABLE_STATE.UNDETERMINED\n    ) {\n      // Moving inside requires\n      this.handlePressIn();\n    } else if (state === State.END) {\n      const shouldCallOnPress =\n        !this.longPressDetected &&\n        this.STATE !== TOUCHABLE_STATE.MOVED_OUTSIDE &&\n        this.pressOutTimeout === null;\n      this.handleGoToUndetermined();\n      if (shouldCallOnPress) {\n        // Calls only inside component whether no long press was called previously\n        this.props.onPress && this.props.onPress();\n      }\n    }\n  };\n\n  onLongPressDetected = () => {\n    this.longPressDetected = true;\n    this.props.onLongPress();\n  };\n\n  componentWillUnmount() {\n    // to prevent memory leaks\n    this.reset();\n  }\n\n  onMoveIn() {\n    if (this.STATE === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n      // This call is not throttled with delays (like in RN's implementation).\n      this.moveToState(TOUCHABLE_STATE.BEGAN);\n    }\n  }\n\n  onMoveOut() {\n    // long press should no longer be detected\n    clearTimeout(this.longPressTimeout);\n    this.longPressTimeout = null;\n    if (this.STATE === TOUCHABLE_STATE.BEGAN) {\n      this.handleMoveOutside();\n    }\n  }\n\n  render() {\n    const coreProps = {\n      accessible: this.props.accessible !== false,\n      accessibilityLabel: this.props.accessibilityLabel,\n      accessibilityHint: this.props.accessibilityHint,\n      accessibilityComponentType: this.props.accessibilityComponentType,\n      accessibilityRole: this.props.accessibilityRole,\n      accessibilityStates: this.props.accessibilityStates,\n      accessibilityTraits: this.props.accessibilityTraits,\n      nativeID: this.props.nativeID,\n      onLayout: this.props.onLayout,\n      hitSlop: this.props.hitSlop,\n    };\n\n    return (\n      <BaseButton\n        style={this.props.containerStyle}\n        onHandlerStateChange={\n          this.props.disabled ? null : this.onHandlerStateChange\n        }\n        onGestureEvent={this.onGestureEvent}\n        hitSlop={this.props.hitSlop}\n        shouldActivateOnStart={this.props.shouldActivateOnStart}\n        disallowInterruption={this.props.disallowInterruption}\n        testID={this.props.testID}\n        {...this.props.extraButtonProps}>\n        <Animated.View {...coreProps} style={this.props.style}>\n          {this.props.children}\n        </Animated.View>\n      </BaseButton>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport GenericTouchable, { TOUCHABLE_STATE } from './GenericTouchable';\nimport { StyleSheet, View } from 'react-native';\nimport PropTypes from 'prop-types';\n\n/**\n * TouchableHighlight follows RN's implementation\n */\nexport default class TouchableHighlight extends Component {\n  static defaultProps = {\n    ...GenericTouchable.defaultProps,\n    activeOpacity: 0.85,\n    delayPressOut: 100,\n    underlayColor: 'black',\n  };\n\n  static propTypes = {\n    ...GenericTouchable.publicPropTypes,\n    activeOpacity: PropTypes.number,\n    underlayColor: PropTypes.string,\n    style: PropTypes.any,\n    onShowUnderlay: PropTypes.func,\n    onHideUnderlay: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      extraChildStyle: null,\n      extraUnderlayStyle: null,\n    };\n  }\n\n  // Copied from RN\n  showUnderlay = () => {\n    if (!this.hasPressHandler()) {\n      return;\n    }\n    this.setState({\n      extraChildStyle: {\n        opacity: this.props.activeOpacity,\n      },\n      extraUnderlayStyle: {\n        backgroundColor: this.props.underlayColor,\n      },\n    });\n    this.props.onShowUnderlay && this.props.onShowUnderlay();\n  };\n\n  hasPressHandler = () =>\n    this.props.onPress ||\n    this.props.onPressIn ||\n    this.props.onPressOut ||\n    this.props.onLongPress;\n\n  hideUnderlay = () => {\n    this.setState({\n      extraChildStyle: null,\n      extraUnderlayStyle: null,\n    });\n    this.props.onHideUnderlay && this.props.onHideUnderlay();\n  };\n\n  renderChildren() {\n    if (!this.props.children) {\n      return <View />;\n    }\n\n    const child = React.Children.only(this.props.children);\n    return React.cloneElement(child, {\n      style: StyleSheet.compose(\n        child.props.style,\n        this.state.extraChildStyle\n      ),\n    });\n  }\n\n  onStateChange = (from, to) => {\n    if (to === TOUCHABLE_STATE.BEGAN) {\n      this.showUnderlay();\n    } else if (\n      to === TOUCHABLE_STATE.UNDETERMINED ||\n      to === TOUCHABLE_STATE.MOVED_OUTSIDE\n    ) {\n      this.hideUnderlay();\n    }\n  };\n\n  render() {\n    const { style = {}, ...rest } = this.props;\n    const { extraUnderlayStyle } = this.state;\n    return (\n      <GenericTouchable\n        {...rest}\n        style={[style, extraUnderlayStyle]}\n        onStateChange={this.onStateChange}>\n        {this.renderChildren()}\n      </GenericTouchable>\n    );\n  }\n}\n","import { TouchableNativeFeedback } from 'react-native';\n\nexport default TouchableNativeFeedback;\n","import { Animated, Easing, StyleSheet, View } from 'react-native';\nimport GenericTouchable, { TOUCHABLE_STATE } from './GenericTouchable';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * TouchableOpacity bases on timing animation which has been used in RN's core\n */\nexport default class TouchableOpacity extends Component {\n  static defaultProps = {\n    ...GenericTouchable.defaultProps,\n    activeOpacity: 0.2,\n  };\n\n  static propTypes = {\n    ...GenericTouchable.publicPropTypes,\n    style: PropTypes.any,\n    activeOpacity: PropTypes.number,\n  };\n\n  // opacity is 1 one by default but could be overwritten\n  getChildStyleOpacityWithDefault = () => {\n    const childStyle = StyleSheet.flatten(this.props.style) || {};\n    return childStyle.opacity == null ? 1 : childStyle.opacity;\n  };\n\n  opacity = new Animated.Value(this.getChildStyleOpacityWithDefault());\n\n  setOpacityTo = (value, duration) => {\n    Animated.timing(this.opacity, {\n      toValue: value,\n      duration: duration,\n      easing: Easing.inOut(Easing.quad),\n      useNativeDriver: true,\n    }).start();\n  };\n\n  onStateChange = (from, to) => {\n    if (to === TOUCHABLE_STATE.BEGAN) {\n      this.setOpacityTo(this.props.activeOpacity, 0);\n    } else if (\n      to === TOUCHABLE_STATE.UNDETERMINED ||\n      to === TOUCHABLE_STATE.MOVED_OUTSIDE\n    ) {\n      this.setOpacityTo(this.getChildStyleOpacityWithDefault(), 150);\n    }\n  };\n\n  render() {\n    const { style = {}, ...rest } = this.props;\n    return (\n      <GenericTouchable\n        {...rest}\n        style={[\n          style,\n          {\n            opacity: this.opacity,\n          },\n        ]}\n        onStateChange={this.onStateChange}>\n        {this.props.children ? this.props.children : <View />}\n      </GenericTouchable>\n    );\n  }\n}\n","import React from 'react';\nimport GenericTouchable from './GenericTouchable';\n\nconst TouchableWithoutFeedback = React.forwardRef((props, ref) => (\n  <GenericTouchable ref={ref} {...props} />\n));\n\nTouchableWithoutFeedback.defaultProps = GenericTouchable.defaultProps;\n\nTouchableWithoutFeedback.propTypes = GenericTouchable.publicPropTypes;\n\nexport default TouchableWithoutFeedback;\n","export { default as TouchableNativeFeedback } from './TouchableNativeFeedback';\nexport {\n  default as TouchableWithoutFeedback,\n} from './TouchableWithoutFeedback';\nexport { default as TouchableOpacity } from './TouchableOpacity';\nexport { default as TouchableHighlight } from './TouchableHighlight';\n","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar aStackPool = [];\nvar bStackPool = [];\n/**\n * Checks if two values are equal. Values may be primitives, arrays, or objects.\n * Returns true if both arguments have the same keys and values.\n *\n * @see http://underscorejs.org\n * @copyright 2009-2013 Jeremy Ashkenas, DocumentCloud Inc.\n * @license MIT\n */\n\nfunction areEqual(a, b) {\n  var aStack = aStackPool.length ? aStackPool.pop() : [];\n  var bStack = bStackPool.length ? bStackPool.pop() : [];\n  var result = eq(a, b, aStack, bStack);\n  aStack.length = 0;\n  bStack.length = 0;\n  aStackPool.push(aStack);\n  bStackPool.push(bStack);\n  return result;\n}\n\nfunction eq(a, b, aStack, bStack) {\n  if (a === b) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    return a !== 0 || 1 / a == 1 / b;\n  }\n\n  if (a == null || b == null) {\n    // a or b can be `null` or `undefined`\n    return false;\n  }\n\n  if (typeof a != 'object' || typeof b != 'object') {\n    return false;\n  }\n\n  var objToStr = Object.prototype.toString;\n  var className = objToStr.call(a);\n\n  if (className != objToStr.call(b)) {\n    return false;\n  }\n\n  switch (className) {\n    case '[object String]':\n      return a == String(b);\n\n    case '[object Number]':\n      return isNaN(a) || isNaN(b) ? false : a == Number(b);\n\n    case '[object Date]':\n    case '[object Boolean]':\n      return +a == +b;\n\n    case '[object RegExp]':\n      return a.source == b.source && a.global == b.global && a.multiline == b.multiline && a.ignoreCase == b.ignoreCase;\n  } // Assume equality for cyclic structures.\n\n\n  var length = aStack.length;\n\n  while (length--) {\n    if (aStack[length] == a) {\n      return bStack[length] == b;\n    }\n  }\n\n  aStack.push(a);\n  bStack.push(b);\n  var size = 0; // Recursively compare objects and arrays.\n\n  if (className === '[object Array]') {\n    size = a.length;\n\n    if (size !== b.length) {\n      return false;\n    } // Deep compare the contents, ignoring non-numeric properties.\n\n\n    while (size--) {\n      if (!eq(a[size], b[size], aStack, bStack)) {\n        return false;\n      }\n    }\n  } else {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n\n    if (a.hasOwnProperty('valueOf') && b.hasOwnProperty('valueOf')) {\n      return a.valueOf() == b.valueOf();\n    }\n\n    var keys = Object.keys(a);\n\n    if (keys.length != Object.keys(b).length) {\n      return false;\n    }\n\n    for (var i = 0; i < keys.length; i++) {\n      if (!eq(a[keys[i]], b[keys[i]], aStack, bStack)) {\n        return false;\n      }\n    }\n  }\n\n  aStack.pop();\n  bStack.pop();\n  return true;\n}\n\nmodule.exports = areEqual;","'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["RNGestureHandlerModule","Direction","DrawerLayout","props","context","_accessibilityIsModalView","React","createRef","_pointerEventsView","_panGestureHandler","_drawerShown","_updateAnimatedEvent","state","drawerPosition","drawerWidth","drawerType","dragXValue","dragX","touchXValue","touchX","drawerTranslation","containerWidth","Animated","multiply","Value","add","setValue","translationX","dragOffsetFromOnStartPosition","interpolate","inputRange","outputRange","_openValue","extrapolate","_onGestureEvent","event","nativeEvent","x","useNativeDriver","useNativeAnimations","_handleContainerLayout","setState","layout","width","_emitStateChanged","newState","drawerWillShow","onDrawerStateChanged","_openingHandlerStateChange","oldState","State","ACTIVE","_handleRelease","keyboardDismissMode","Keyboard","dismiss","hideStatusBar","StatusBar","setHidden","statusBarAnimation","_onTapHandlerStateChange","drawerLockMode","closeDrawer","velocityX","gestureStartX","dragOffsetBasedOnStart","startOffsetX","_animateDrawer","_updateShowing","showing","current","setNativeProps","accessibilityViewIsModal","pointerEvents","minSwipeDistance","edgeWidth","fromLeft","gestureOrientation","hitSlop","left","undefined","right","activeOffsetX","fromValue","toValue","velocity","nextFramePosition","Math","min","max","willShow","spring","bounciness","start","finished","onDrawerOpen","onDrawerClose","openDrawer","options","forceUpdate","_renderOverlay","invariant","dynamicOverlayStyles","opacity","backgroundColor","overlayColor","TapGestureHandler","onHandlerStateChange","View","ref","style","styles","overlay","_renderDrawer","containerStyles","drawerBackgroundColor","drawerContainerStyle","contentContainerStyle","drawerSlide","containerSlide","reverseContentDirection","I18nManager","isRTL","dynamicDrawerStyles","openValue","transform","translateX","drawerTranslateX","closedDrawerOffset","drawerStyles","flexDirection","main","onLayout","containerOnBack","containerInFront","importantForAccessibility","children","drawerContainer","renderNavigationView","_setPanGestureRef","onGestureRef","this","PanGestureHandler","failOffsetY","onGestureEvent","enableTrackpadTwoFingerGesture","enabled","Component","defaultProps","positions","Left","Right","StyleSheet","create","absoluteFillObject","zIndex","flex","overflow","RawButton","createNativeWrapper","GestureHandlerButton","shouldCancelWhenOutside","shouldActivateOnStart","BaseButton","_handleEvent","active","pointerInside","_lastActive","onActiveStateChange","CANCELLED","onPress","_onHandlerStateChange","e","rippleColor","rest","processColor","propTypes","PropTypes","func","AnimatedBaseButton","createAnimatedComponent","btnStyles","underlay","position","bottom","top","RectButton","_onActiveStateChange","Platform","OS","_opacity","activeOpacity","resolvedStyle","flatten","underlayColor","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","BorderlessButton","borderless","bool","MEMOIZED","WeakMap","memoizeWrap","config","memoized","get","set","module","exports","ScrollView","ReactNative","disallowInterruption","Switch","TextInput","DrawerLayoutAndroid","FlatList","forwardRef","renderScrollComponent","scrollProps","requireNativeComponent","id","string","minPointers","number","waitFor","oneOfType","object","arrayOf","simultaneousHandlers","shape","vertical","horizontal","height","onBegan","onFailed","onCancelled","onActivated","onEnded","createHandler","GestureHandlerPropTypes","maxDurationMs","maxDelayMs","numberOfTaps","maxDeltaX","maxDeltaY","maxDist","FlingGestureHandler","numberOfPointers","direction","ForceTouchFallback","console","warn","ForceTouchGestureHandler","PlatformConstants","forceTouchAvailable","minForce","maxForce","feedbackOnActivation","LongPressGestureHandler","minDurationMs","activeOffsetY","failOffsetX","minDist","minVelocity","minVelocityX","minVelocityY","maxPointers","avgTouches","res","minDeltaX","activeOffsetXStart","activeOffsetXEnd","failOffsetXStart","failOffsetXEnd","minOffsetX","minDeltaY","activeOffsetYStart","activeOffsetYEnd","failOffsetYStart","failOffsetYEnd","minOffsetY","Array","isArray","transformPanGestureHandlerProps","PinchGestureHandler","RotationGestureHandler","NativeModules","UNDETERMINED","FAILED","BEGAN","END","keys","Object","i","length","Swipeable","friction","overshootFriction","rowTranslation","leftWidth","rowWidth","rightOffset","rightWidth","overshootLeft","overshootRight","transX","_transX","_showLeftAction","_leftActionTranslate","Number","MIN_VALUE","_showRightAction","_rightActionTranslate","close","rowState","leftThreshold","rightThreshold","_currentOffset","_animateRow","sign","restSpeedThreshold","restDisplacementThreshold","animationOptions","onSwipeableLeftOpen","onSwipeableRightOpen","onSwipeableClose","onSwipeableOpen","onSwipeableLeftWillOpen","onSwipeableRightWillOpen","onSwipeableWillClose","onSwipeableWillOpen","_onRowLayout","openLeft","openRight","renderLeftActions","renderRightActions","leftActions","rightActions","container","containerStyle","childrenContainerStyle","handlerName","transformProps","customNativeProps","Handler","_onGestureHandlerEvent","handlerTag","_handlerTag","onGestureHandlerEvent","_onGestureHandlerStateChange","stateEventName","stateToPropMappings","onGestureHandlerStateChange","_refHandler","node","_viewNode","Children","only","_createGestureHandler","newConfig","_config","createGestureHandler","_attachGestureHandler","newViewTag","_viewTag","attachGestureHandler","_propsRef","_updateGestureHandler","updateGestureHandler","handlerIDToTag","Error","dropGestureHandler","_updateEnqueued","clearImmediate","hasUnresolvedRefs","setImmediate","_update","filterConfig","constructor","findNodeHandle","viewTag","deepEqual","updates","mergedProps","gestureEventHandler","gestureStateEventHandler","events","child","grandChildren","Touchable","TOUCH_TARGET_DEBUG","type","name","displayName","toArray","push","renderDebugView","color","cloneElement","collapsable","findNodeHandleRN","UIManager","customGHEventsConfig","registrationName","genericDirectEventTypes","getConstants","setJSResponder","oldSetJSResponder","clearJSResponder","oldClearJSResponder","tag","blockNativeResponder","handleSetJSResponder","handleClearJSResponder","isConfigParam","param","validProps","defaults","forEach","key","value","transformIntoHandlerTags","handlerIDs","map","filter","handle","handlerID","extract","refs","some","r","ComponentWrapper","gestureHandlerProps","reduce","NATIVE_WRAPPER_PROPS_FILTER","indexOf","Wrapper","hoistNonReactStatics","TOUCHABLE_STATE","MOVED_OUTSIDE","PublicPropTypes","accessible","accessibilityLabel","accessibilityHint","disabled","onPressIn","onPressOut","onLongPress","nativeID","testID","delayPressIn","delayPressOut","delayLongPress","InternalPropTypes","extraButtonProps","onStateChange","GenericTouchable","longPressDetected","STATE","onMoveIn","onMoveOut","moveToState","handlePressIn","shouldCallOnPress","pressOutTimeout","handleGoToUndetermined","onLongPressDetected","pressInTimeout","setTimeout","time","longPressTimeout","clearTimeout","reset","handleMoveOutside","coreProps","accessibilityComponentType","accessibilityRole","accessibilityStates","accessibilityTraits","publicPropTypes","internalPropTypes","TouchableHighlight","showUnderlay","hasPressHandler","extraChildStyle","extraUnderlayStyle","onShowUnderlay","hideUnderlay","onHideUnderlay","from","to","compose","renderChildren","any","TouchableNativeFeedback","TouchableOpacity","getChildStyleOpacityWithDefault","childStyle","setOpacityTo","duration","timing","easing","Easing","inOut","quad","TouchableWithoutFeedback","aStackPool","bStackPool","eq","a","b","aStack","bStack","objToStr","prototype","toString","className","call","String","isNaN","source","global","multiline","ignoreCase","size","hasOwnProperty","valueOf","pop","result","reactIs","REACT_STATICS","childContextTypes","contextType","contextTypes","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","KNOWN_STATICS","caller","callee","arguments","arity","MEMO_STATICS","compare","TYPE_STATICS","getStatics","component","isMemo","ForwardRef","render","Memo","defineProperty","getOwnPropertyNames","getOwnPropertySymbols","getOwnPropertyDescriptor","getPrototypeOf","objectPrototype","targetComponent","sourceComponent","blacklist","inheritedComponent","concat","targetStatics","sourceStatics","descriptor","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","location","propFullName","secret","err","getShim","isRequired","ReactPropTypes","array","bigint","symbol","element","elementType","instanceOf","objectOf","oneOf","exact","checkPropTypes"],"sourceRoot":""}